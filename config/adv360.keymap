
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    percol: period_colon {
        compatible = "zmk,behavior-mod-morph";
        label = "PERIOD_COLON";
        #binding-cells = <0>;
        bindings = <&kp PERIOD>, <&kp COLON>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    comexc: comma_excl {
        compatible = "zmk,behavior-mod-morph";
        label = "COMMA_EXCL";
        #binding-cells = <0>;
        bindings = <&kp COMMA>, <&kp EXCL>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    quogra: quote_grave {
        compatible = "zmk,behavior-mod-morph";
        label = "QUOTE_GRAVE";
        #binding-cells = <0>;
        bindings = <&kp SINGLE_QUOTE>, <&kp GRAVE>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    semat: semi_at {
        compatible = "zmk,behavior-mod-morph";
        label = "SEMI_AT";
        #binding-cells = <0>;
        bindings = <&kp SEMI>, <&kp AT>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    spcl4: spc_layer4 {
        compatible = "zmk,behavior-mod-morph";
        label = "SPC_L4";
        #binding-cells = <0>;
        bindings = <&kp SPC>, <&sl 4>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    nconvl4: nonconvert_layer4 {
        compatible = "zmk,behavior-mod-morph";
        label = "NCONV_L4";
        #binding-cells = <0>;
        bindings = <&kp INT5>, <&sl 4>;
        mods = <(MOD_LSFT|MOD_RSFT)>;
    };
    sands: shift_and_space {
        compatible = "zmk,behavior-hold-tap";
        label = "SHIFT_AND_SPACE";
        #binding-cells = <2>;
        flavor = "tap-unless-interrupted";
        tapping-term-ms = <200>;
        bindings = <&kp>, <&spcl4>;
    };
    sandnconv: shift_and_nonconvert {
        compatible = "zmk,behavior-hold-tap";
        label = "SHIFT_AND_NCONV";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <200>;
        bindings = <&kp>, <&nconvl4>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
            &kp ESC           &kp N4     &kp N0    &kp N1     &kp N2   &kp N3                        &sl 2                                                                             &mo 2  &kp N7  &kp N6    &kp N5       &kp N9         &kp N8             &mo 3
            &kp TAB            &kp Q      &kp H     &kp O      &kp U    &kp X                 &kp LEFT_WIN                                                                     &kp RIGHT_WIN   &kp W   &kp M     &kp R        &kp F          &kp Z  &kp LEFT_BRACKET
 &mt LEFT_ALT MINUS            &kp Y      &kp I     &kp E      &kp A  &percol                      &kp ESC    &kp LALT  &kp RG(TAB)                  &kp LA(TAB)    &kp RCTRL       &kp BSPC   &kp D   &kp S     &kp T        &kp N          &kp B            &semat
          &kp LSHFT            &kp J  &kp SLASH   &comexc      &kp K  &quogra                                                 &mo 6                        &mo 6                               &kp C   &kp G     &kp L        &kp P          &kp V     &kp RIGHT_ALT
          &kp LCTRL  &kp PRINTSCREEN   &kp CAPS  &kp LEFT  &kp RIGHT                     &sandnconv LSHIFT 0  &lt 5 INT4      &kp DEL                      &kp INS  &lt 5 ENTER   &sands RSHFT 0          &kp UP  &kp DOWN  &kp PAGE_UP  &kp PAGE_DOWN         &kp RCTRL
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                           &trans                  &none    &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &none
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL                 &none                &kp TAB     &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS   &none
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                                           &kp BACKSPACE     &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER   &none
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER             &kp KP_N0                         &macro_zeros     &kp COMMA     &kp KP_DOT            &none  &trans
            >;
        };

        layer_fn {
            bindings = <
  &none   &kp F4  &kp F10   &kp F1   &kp F2   &kp F3            &tog 1                                                  &tog 1   &kp F7   &kp F6   &kp F5   &kp F9   &kp F8   &none
  &none  &kp F14  &kp F20  &kp F11  &kp F12  &kp F13             &none                                                   &none  &kp F17  &kp F16  &kp F15  &kp F19  &kp F18   &none
 &trans   &trans   &trans   &trans   &trans   &trans             &none  &kp F5   &mo 3                  &trans  &trans   &none   &trans   &trans   &trans   &trans   &trans  &trans
 &trans   &trans   &trans   &trans   &trans   &trans                            &trans                  &trans                   &trans   &trans   &trans   &trans   &trans  &trans
 &trans   &trans   &trans   &trans   &trans                     &trans  &trans  &trans                  &trans  &trans  &trans            &trans   &trans   &trans   &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 4  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &none                                                                                &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none             &bootloader                                                                           &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                   &none         &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                         &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                          &out OUT_USB  &out OUT_BLE   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_symbol {
            bindings = <
 &trans         &trans                &trans             &trans                 &trans    &trans            &trans                                                  &trans       &trans            &trans          &trans             &trans    &trans  &trans
 &trans         &trans         &kp LESS_THAN          &kp EQUAL       &kp GREATER_THAN    &trans            &trans                                                  &trans       &trans  &kp LEFT_BRACKET  &kp UNDERSCORE  &kp RIGHT_BRACKET    &trans  &trans
 &trans  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp RIGHT_PARENTHESIS  &kp HASH            &trans  &trans  &trans                  &trans  &trans  &trans    &kp TILDE    &kp LEFT_BRACE      &kp DOLLAR    &kp RIGHT_BRACE  &kp PIPE  &trans
 &trans         &trans                &trans          &kp ASTRK               &kp PLUS    &trans                            &trans                  &trans                  &kp PERCENT     &kp AMPERSAND       &kp CARET        &kp PERCENT    &trans  &trans
 &trans         &trans                &trans             &trans                 &trans                      &trans  &trans  &trans                  &trans  &trans  &trans                         &trans          &trans             &trans    &trans  &trans
            >;
        };

        layer_ctrl {
            bindings = <
 &trans     &trans     &trans     &trans     &trans            &trans                       &trans                                                           &trans     &trans     &trans     &trans     &trans                 &trans        &trans
 &trans  &kp LC(Q)  &kp LC(W)  &kp LC(R)  &kp LC(T)            &trans                       &trans                                                           &trans  &kp PG_UP   &kp HOME    &kp END  &kp PG_DN                 &trans        &trans
 &trans  &kp LC(A)  &kp LC(F)  &kp LC(D)    &kp TAB  &macro_kill_line                       &trans  &trans  &trans                  &trans         &trans    &trans   &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &kp LC(RIGHT_BRACKET)  &kp LA(SEMI)
 &trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)            &trans                                       &trans                  &trans                           &kp LC(N)  &kp LC(P)  &kp LC(L)     &trans                 &trans        &trans
 &trans     &trans     &trans     &trans     &trans                              &kp LC(BACKSPACE)  &trans   &kp Y                  &trans  &kp LC(ENTER)  &kp INT5                &trans     &trans     &trans                 &trans        &trans
            >;
        };

        layer_VOL {
            bindings = <
 &trans          &trans          &trans  &trans  &trans  &trans                &trans                                                                                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans          &trans          &trans  &trans  &trans  &trans                &trans                                                                                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans          &trans          &trans  &trans  &trans  &trans                &trans      &trans  &kp K_POWER                  &kp K_POWER           &trans             &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans          &trans          &trans  &trans  &trans  &trans                                         &trans                       &trans                                      &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp SCROLLLOCK  &kp KP_NUMLOCK  &trans  &trans                    &kp K_PREV  &kp K_NEXT   &kp K_STOP                   &kp K_MUTE  &kp K_VOLUME_UP  &kp K_VOLUME_DOWN          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};

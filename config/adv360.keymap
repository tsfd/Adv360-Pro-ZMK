
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESC  &kp N4     &kp N0    &kp N1     &kp N2   &kp N3                     &mo 6                                                                                 &kp K_APP  &kp N7  &kp N6    &kp N5       &kp N9         &kp N8             &mo 3
   &kp TAB   &kp Q      &kp H     &kp O      &kp U    &kp X              &kp LEFT_WIN                                                                             &kp RIGHT_WIN   &kp W   &kp M     &kp R        &kp F          &kp Z  &kp LEFT_BRACKET
 &kp MINUS   &kp Y      &kp I       &hm      &kp A  &percol                   &kp ESC  &mt LCTRL LA(TAB)    &mo 6                    &mo 6  &mt LCTRL LA(TAB)          &kp BSPC   &kp D   &kp S       &hm        &kp N          &kp B            &semat
  &kp LALT   &kp J  &kp SLASH   &comexc      &kp K  &quogra                                                 &mo 2                    &mo 2                                        &kp C   &kp G     &kp L        &kp P          &kp V     &kp RIGHT_ALT
 &kp LCTRL   &none   &kp CAPS  &kp LEFT  &kp RIGHT                     &mt LSHFT INT4         &lt 4 INT5  &kp DEL                  &kp INS        &lt 4 ENTER  &mt RSHIFT SPACE          &kp UP  &kp DOWN  &kp PAGE_UP  &kp PAGE_DOWN         &kp RCTRL
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                               &trans                  &none  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T              &trans                                                                 &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &none
 &kp MINUS      &kp A     &kp S     &kp D      &kp F   &kp G              &trans  &kp RALT  &kp LG(TAB)                  &kp RA(TAB)  &kp RCTRL              &kp BSPC                &kp TAB   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS   &none
    &trans      &kp Z     &kp X     &kp C      &kp V   &kp B                                      &mo 2                        &mo 2                                            &macro_zeros   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &trans
    &trans  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp INT4  &kp INT5      &kp DEL                      &kp INS  &kp ENTER             &kp SPACE                          &kp KP_N0     &kp COMMA     &kp KP_DOT            &none  &trans
            >;
        };

        layer_fn {
            bindings = <
  &none   &kp F4  &kp F10        &kp F1     &kp F2           &kp F3               &tog 6                                                          &tog 1   &kp F7   &kp F6   &kp F5   &kp F9   &kp F8   &none
  &none  &kp F14  &kp F20       &kp F11    &kp F12          &kp F13                &none                                                           &none  &kp F17  &kp F16  &kp F15  &kp F19  &kp F18   &none
 &trans   &trans   &trans  &kp RC(HOME)  &kp RC(C)        &kp RC(L)            &kp RC(F)     &kp F5     &mo 3                  &trans  &trans      &none   &trans   &trans   &trans   &trans   &trans  &trans
 &trans   &trans   &trans        &trans     &trans  &kp PRINTSCREEN                                    &trans                  &trans                      &trans   &trans   &trans   &trans   &trans  &trans
 &trans   &trans   &trans        &trans     &trans                             &kp ENTER  &kp SPACE  &kp BSPC                  &trans  &trans  &kp SPACE            &trans   &trans   &trans   &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 4  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &none                                                                                &trans   &none       &none       &none   &none   &to 7   &none
  &none         &none         &none         &none         &none         &none             &bootloader                                                                           &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                   &none         &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                         &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                          &out OUT_USB  &out OUT_BLE   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_symbol {
            bindings = <
 &trans         &trans                &trans             &trans                 &trans        &trans            &trans                                                                             &trans        &trans            &trans          &trans             &trans          &trans  &trans
 &trans      &macro_lt         &kp LESS_THAN          &kp EQUAL       &kp GREATER_THAN     &macro_gt            &trans                                                                             &trans        &trans  &kp LEFT_BRACKET  &kp UNDERSCORE  &kp RIGHT_BRACKET          &trans  &trans
 &trans  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp RIGHT_PARENTHESIS      &kp HASH            &trans  &trans              &trans                  &trans     &trans  &macro_del_brckets     &kp TILDE    &kp LEFT_BRACE      &kp DOLLAR    &kp RIGHT_BRACE        &kp PIPE  &trans
 &trans    &macro_ltgt                &trans          &kp ASTRK               &kp PLUS  &macro_paren                                        &trans                  &trans                                 &macro_brace     &kp AMPERSAND       &kp CARET          &kp PRCNT  &macro_bracket  &trans
 &trans         &trans                &trans             &trans                 &trans                          &trans  &trans  &macro_del_brckets                  &trans  &kp ENTER           &kp SPACE                          &trans          &trans             &trans          &trans  &trans
            >;
        };

        layer_ctrl {
            bindings = <
        &trans  &kp LC(N4)    &kp LC(N0)    &kp LC(N1)     &kp LC(N2)        &kp LC(N3)               &trans                                                                        &trans  &kp LC(N7)  &kp LC(N6)    &kp LC(N5)       &kp LC(N9)             &kp LC(N8)                &trans
        &trans   &kp LC(Q)     &kp LC(W)     &kp LC(R)      &kp LC(U)         &kp LC(T)               &trans                                                                        &trans   &kp LC(F)   &kp PG_UP      &kp HOME          &kp END              &kp PG_DN  &kp LC(LEFT_BRACKET)
 &kp LC(MINUS)   &kp LC(A)     &kp LC(F)     &kp LC(D)        &kp TAB  &macro_kill_line            &kp LC(H)  &trans     &trans                       &trans         &trans   &kp LC(BSPC)    &kp LEFT    &kp DOWN        &kp UP        &kp RIGHT  &kp LC(RIGHT_BRACKET)          &kp LA(SEMI)
        &trans   &kp LC(Z)     &kp LC(X)     &kp LC(C)      &kp LC(V)         &kp LC(K)                                  &trans                       &trans                                 &kp LC(P)   &kp LC(N)     &kp LC(L)           &trans                 &trans                &trans
        &trans      &trans  &kp LC(CAPS)  &kp LC(LEFT)  &kp LC(RIGHT)                              &kp LSHFT  &trans  &kp ENTER                  &kp LC(INS)  &kp LC(ENTER)  &kp LC(SPACE)              &kp LC(UP)  &kp LC(DOWN)  &kp LC(PAGE_UP)      &kp LC(PAGE_DOWN)                &trans
            >;
        };

        layer_VOL {
            bindings = <
    &trans          &trans          &trans        &trans         &kp F1  &kp LC(B)                &tog 6                                                                                     &tog 1    &trans    &trans  &trans     &trans  &trans      &trans
    &trans          &trans          &trans        &trans         &trans     &trans             &kp LC(B)                                                                                     &trans    &trans    &trans  &trans     &trans  &trans      &trans
    &trans          &trans          &trans  &kp LC(PLUS)  &kp LC(MINUS)     &trans                &kp F3  &kp K_SLEEP  &kp K_POWER                  &kp K_POWER       &kp K_MUTE             &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans      &trans
 &kp LSHFT          &trans          &trans        &trans         &trans     &trans                                          &trans                       &trans                                        &trans    &trans  &trans     &trans  &trans  &kp RSHIFT
    &trans  &kp SCROLLLOCK  &kp KP_NUMLOCK        &trans         &trans                       &kp K_PREV   &kp K_NEXT   &kp K_STOP                       &trans  &kp K_VOLUME_UP  &kp K_VOLUME_DOWN              &trans  &trans     &trans  &trans      &trans
            >;
        };

        layer_QWERTY {
            bindings = <
           &trans  &trans  &trans  &trans  &trans  &trans               &trans                                                               &trans  &trans  &trans     &trans      &trans         &trans  &trans
           &trans   &kp Q   &kp W   &kp E   &kp R   &kp T               &trans                                                               &trans   &kp Y   &kp U      &kp I       &kp O          &kp P  &trans
 &kp LEFT_CONTROL   &kp A   &kp S   &kp D   &kp F   &kp G               &trans            &trans  &trans                  &trans     &trans  &trans   &kp H   &kp J      &kp K       &kp L  &kp SEMICOLON  &trans
   &kp LEFT_SHIFT   &kp Z   &kp X   &kp C   &kp V   &kp B                                         &trans                  &trans                      &kp N   &kp M  &kp COMMA  &kp PERIOD      &kp SLASH  &trans
     &kp LEFT_ALT  &trans  &trans  &trans  &trans                    &kp SPACE  &kp LEFT_CONTROL  &trans                  &trans  &kp ENTER   &to 0          &trans     &trans      &trans         &trans  &trans
            >;
        };

    };
};

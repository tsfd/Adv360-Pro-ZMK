
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
    moandkp: mo_and_kp {
        compatible = "zmk,behavior-hold-tap";
        label = "MO_AND_KP";
        #binding-cells = <2>;
        flavor = "tap-unless-interrupted";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&kp>;
    };
    moandkpqt: mo_and_kp_qt {
        compatible = "zmk,behavior-hold-tap";
        label = "MO_AND_KP_QT";
        #binding-cells = <2>;
        flavor = "tap-unless-interrupted";
        tapping-term-ms = <200>;
        quick-tap-ms = <175>;
        bindings = <&mo>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
            &kp ESC           &kp N4     &kp N0     &kp N1     &kp N2            &kp N3                     &mo 2                                                                              &mo 2  &kp N7  &kp N6    &kp N5       &kp N9         &kp N8              &mo 3
            &kp TAB            &kp Q      &kp H      &kp O      &kp U             &kp X              &kp LEFT_WIN                                                                      &kp RIGHT_WIN   &kp W   &kp M     &kp R        &kp F          &kp Z   &kp LEFT_BRACKET
 &mt LEFT_ALT MINUS            &kp Y      &kp I      &hm E      &kp A        &kp PERIOD                   &kp ESC   &kp LCTRL  &kp LG(TAB)                  &kp LA(TAB)    &kp RCTRL       &kp ENTER   &kp D   &kp S     &hm T        &kp N          &kp B           &kp SEMI
          &kp LSHFT            &kp J  &kp SLASH  &kp COMMA      &kp K  &kp SINGLE_QUOTE                                              &mo 7                        &mo 7                                &kp C   &kp G     &kp L        &kp P          &kp V      &kp RIGHT_ALT
   &kp LEFT_CONTROL  &kp PRINTSCREEN   &kp CAPS   &kp LEFT  &kp RIGHT                              &moandkpqt LSHFT BS  &lt 5 INT4   &kp DELETE                   &kp INSERT  &lt 5 ENTER  &moandkp RSHFT SPC          &kp UP  &kp DOWN  &kp PAGE_UP  &kp PAGE_DOWN  &kp RIGHT_CONTROL
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                           &trans                  &none    &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &none
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL                 &none                &kp TAB     &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS   &none
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B                                 &kp HOME                  &kp PG_UP                                                &kp BSPC     &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER   &none
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER             &kp KP_N0                         &macro_zeros     &kp COMMA     &kp KP_DOT            &none  &trans
            >;
        };

        layer_fn {
            bindings = <
  &none   &kp F4  &kp F10   &kp F1   &kp F2   &kp F3            &tog 1                                                   &mo 3   &kp F7   &kp F6   &kp F5   &kp F9   &kp F8   &none
  &none  &kp F14  &kp F20  &kp F11  &kp F12  &kp F13             &none                                                   &none  &kp F17  &kp F16  &kp F15  &kp F19  &kp F18   &none
 &trans   &trans   &trans   &trans   &trans   &trans             &none  &trans   &mo 3                  &trans  &trans   &none   &trans   &trans   &trans   &trans   &trans  &trans
 &trans   &trans   &trans   &trans   &trans   &trans                            &trans                  &trans                   &trans   &trans   &trans   &trans   &trans  &trans
 &trans   &trans   &trans   &trans   &trans                     &trans  &trans  &trans                  &trans  &trans  &trans            &trans   &trans   &trans   &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 4  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none  &out OUT_USB  &out OUT_BLE                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_symbol {
            bindings = <
 &trans         &trans                &trans             &trans                 &trans    &trans            &trans                                                  &trans       &trans            &trans          &trans             &trans    &trans  &trans
 &trans         &trans         &kp LESS_THAN          &kp EQUAL       &kp GREATER_THAN    &trans            &trans                                                  &trans       &trans  &kp LEFT_BRACKET  &kp UNDERSCORE  &kp RIGHT_BRACKET    &trans  &trans
 &trans  &kp BACKSLASH  &kp LEFT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp RIGHT_PARENTHESIS  &kp HASH            &trans  &trans  &trans                  &trans  &trans  &trans    &kp TILDE    &kp LEFT_BRACE      &kp DOLLAR    &kp RIGHT_BRACE  &kp PIPE  &trans
 &trans         &trans                &trans          &kp ASTRK               &kp PLUS    &trans                            &trans                  &trans                  &kp PERCENT     &kp AMPERSAND       &kp CARET        &kp PERCENT    &trans  &trans
 &trans         &trans                &trans             &trans                 &trans                      &trans  &trans  &trans                  &trans  &trans  &trans                         &trans          &trans             &trans    &trans  &trans
            >;
        };

        layer_ctrl {
            bindings = <
 &trans     &trans     &trans     &trans     &trans     &trans                  &trans                                                           &trans     &trans     &trans     &trans     &trans                 &trans        &trans
 &trans  &kp LC(Q)  &kp LC(W)  &kp LC(R)  &kp LC(T)     &trans                  &trans                                                           &trans  &kp PG_UP   &kp HOME    &kp END  &kp PG_DN                 &trans        &trans
 &trans  &kp LC(A)  &kp LC(F)  &kp LC(D)    &kp TAB  &kp LC(L)                  &trans  &trans  &trans                  &trans         &trans    &trans   &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &kp LC(RIGHT_BRACKET)  &kp LA(SEMI)
 &trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)     &trans                                  &trans                  &trans                           &kp LC(N)  &kp LC(P)  &kp LC(L)  &kp LC(P)                 &trans        &trans
 &trans     &trans     &trans     &trans     &trans                       &kp LC(BSPC)  &trans   &kp Y                  &trans  &kp LC(ENTER)  &kp INT5                &trans     &trans     &trans                 &trans        &trans
            >;
        };

        layer_shift {
            bindings = <
   &kp LS(ESC)           &kp LS(N4)     &kp LS(N0)    &kp LS(N1)     &kp LS(N2)  &kp LS(N3)                      &trans                                                                                             &trans  &kp LS(N7)  &kp LS(N6)    &kp LS(N5)       &kp LS(N9)         &kp LS(N8)                &trans
   &kp LS(TAB)            &kp LS(Q)      &kp LS(H)     &kp LS(O)      &kp LS(U)   &kp LS(X)            &kp LS(LEFT_WIN)                                                                                  &kp LS(RIGHT_WIN)   &kp LS(W)   &kp LS(M)     &kp LS(R)        &kp LS(F)          &kp LS(Z)  &kp LS(LEFT_BRACKET)
 &kp LS(MINUS)            &kp LS(Y)      &kp LS(I)     &kp LS(E)      &kp LS(A)   &kp COLON                 &kp LS(ESC)  &kp LS(LCTRL)  &kp LS(LG(TAB))                  &kp LS(LA(TAB))  &kp LS(RCTRL)      &kp LS(ENTER)   &kp LS(D)   &kp LS(S)     &kp LS(T)        &kp LS(N)          &kp LS(B)                &kp AT
        &trans            &kp LS(J)  &kp LS(SLASH)      &kp EXCL      &kp LS(K)   &kp GRAVE                                                      &trans                           &trans                                     &kp LS(C)   &kp LS(G)     &kp LS(L)        &kp LS(P)          &kp LS(V)     &kp LS(RIGHT_ALT)
        &trans  &kp LS(PRINTSCREEN)   &kp LS(CAPS)  &kp LS(LEFT)  &kp LS(RIGHT)                                   &sl 3       &kp INT5   &kp LS(DELETE)                   &kp LS(INSERT)  &kp LS(ENTER)              &sl 3              &kp LS(UP)  &kp LS(DOWN)  &kp LS(PAGE_UP)  &kp LS(PAGE_DOWN)                &trans
            >;
        };

        layer_VOL {
            bindings = <
 &trans          &trans          &trans  &trans  &trans  &trans                &trans                                                                          &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans          &trans          &trans  &trans  &trans  &trans                &trans                                                                          &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans          &trans          &trans  &trans  &trans  &trans                &trans      &trans   &kp K_PWR                   &kp K_PWR        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans          &trans          &trans  &trans  &trans  &trans                                        &trans                      &trans                              &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp SCROLLLOCK  &kp KP_NUMLOCK  &trans  &trans                    &kp K_PREV  &kp K_NEXT  &kp K_STOP                  &kp C_MUTE  &kp K_VOL_UP  &kp K_VOL_DN          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
